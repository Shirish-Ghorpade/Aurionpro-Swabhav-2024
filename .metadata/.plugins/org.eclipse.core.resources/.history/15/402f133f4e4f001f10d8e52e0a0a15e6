package com.aurionpro.abstractfactory.model;

import com.aurionpro.model.BankAccount;
import com.aurionpro.model.BankAccountType;
import com.aurionpro.model.MinBalanceExceedsException;
import com.aurionpro.model.NegativeOrZeroAmountException;

public class SavingAccount implements IAccount{
	private long accountNumber;
	private String name;
	private double balance;
	private AccountType accountType;
	private double minimumBalance;
	
	public SavingAccount(long accountNumber, String name, double balance, AccountType accountType, double minimumBalance) {
		super();
		this.accountNumber = accountNumber;
		this.name = name;
		this.balance = balance;
		this.accountType = accountType;
		this.minimumBalance= minimumBalance;
	}
	

	public long getAccountNumber() {
		return accountNumber;
	}

	public void setAccountNumber(long accountNumber) {
		this.accountNumber = accountNumber;
	}
	

	public double getMinimumBalance() {
		return minimumBalance;
	}

	public void setMinimumBalance(double minimumBalance) {
		this.minimumBalance = minimumBalance;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public double getBalance() {
		return balance;
	}

	public void setBalance(double balance) {
		this.balance = balance;
	}

	public AccountType getAccountType() {
		return accountType;
	}

	public void setBankAccountType(AccountType accountType) {
		this.accountType = accountType;
	}
	public void debit(double amount) {
		if (amount <= 0) {
			System.out.println("Negative or zero amount is not valid");
			return;
		}
		if (amount > balance()-minimumBalance) {
			throw new MinBalanceExceedsException(amount, super.getBalance(), MIN_BALANCE);
		} 
		double operation = super.getBalance()-amount;
		super.setBalance(operation);
		System.out.println("You withdraw " + amount + " so, current balance of account number "
				+ super.getAccountNumber() + " is " + super.getBalance());
	}

	public static void display(BankAccount accounts[]) {

		for (int i = 0; i < accounts.length; i++) {
			if (accounts[i].getBankAccountType() == BankAccountType.SAVING) {
				System.out.println("Account Number : " + accounts[i].getAccountNumber());
				System.out.println("Account Holder Name : " + accounts[i].getName());
				System.out.println("Balance of Account : " + accounts[i].getBalance());
			}

		}
	}

}
